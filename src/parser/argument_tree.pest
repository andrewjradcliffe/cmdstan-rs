// Technically, these are the permissible grammars.
// The declaration can appear twice, but only if it is an empty declaration
// directly adjacent to a declaration with associated value
id = {
    !(_id ~ (sep+ ~ _id ~ (&sep | EOI))+)
    ~ (_id ~ ((sep+ ~ _id ~ "=" ~ integer) | ("=" ~ integer)?))
}

init = {
    !(_init ~ (sep+ ~ _init ~ (&sep | EOI))+)
    ~ (_init ~ ((sep+ ~ _init ~ "=" ~ (float | path)) | ("=" ~ (float | path))?))
}

num_threads = {
    !(_num_threads ~ (sep+ ~ _num_threads ~ (&sep | EOI))+)
    ~ (_num_threads ~ ((sep+ ~ _num_threads ~ "=" ~ signed_integer) | ("=" ~ signed_integer)?))
}

argument_tree = {
    SOI ~ argument_tree_term ~ (sep+ ~ argument_tree_term)* ~ &EOI
}

argument_tree_term = _{
    method_special_case
  | init
  | data
  | random
  | output
  | id
  | num_threads
}

_id          = _{ "id" }
_init        = _{ "init" }
_num_threads = _{ "num_threads" }
